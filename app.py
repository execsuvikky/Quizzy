import streamlit
import random
import json
from memes import get_random_meme
from session import SessionVariable

def load_data():
    with open("data.json", "r") as file:
        data_map = json.load(file)
    data_list = list(data_map.items())
    random.shuffle(data_list)
    return data_list

# Session Data
qa = SessionVariable("qa", default=load_data)
correct_counter = SessionVariable("correct_counter", default=0)
incorrect_counter = SessionVariable("incorrect_counter", default=0)
idk_counter = SessionVariable("idk_counter", default=0)
index = SessionVariable("index", default=0)
answer = SessionVariable("answer", default="$")
page = SessionVariable("page", default="start")

streamlit.set_page_config(page_title=f"Quizzy", page_icon="üß†")
streamlit.title("Quizzy")

# End of the quiz
if index.get() >= len(qa.get()):
    streamlit.subheader("–í—ñ—Ç–∞—é, –≤–∏ –ø—Ä–æ–π—à–ª–∏ –≤—Å—ñ —Å–ª–æ–≤–∞!")
    streamlit.write(f"–ü—Ä–∞–≤–∏–ª—å–Ω–∏—Ö: {correct_counter.get()}, –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω–∏—Ö: {incorrect_counter.get()}, –Ω–µ –∑–Ω–∞—é: {idk_counter.get()}")
    streamlit.write("–î—è–∫—É—é –∑–∞ —É—á–∞—Å—Ç—å!")
    streamlit.stop()

# Page "start"
if page.get() == "start":
    streamlit.write("Quizzy —Ü–µ –ø—Ä–æ—Å—Ç–∏–π —Ç–µ—Å—Ç –¥–ª—è –≤–∏–≤—á–µ–Ω–Ω—è –∞–Ω–≥–ª—ñ–π—Å—å–∫–∏—Ö —Å–ª—ñ–≤, —è –±—É–¥—É –ø–æ–∫–∞–∑—É–≤–∞—Ç–∏ –≤–∞–º —Å–ª–æ–≤–æ, –∞ –≤–∏ –ø–æ–≤–∏–Ω–Ω—ñ –≤—ñ–¥–ø–æ–≤—ñ—Å—Ç–∏ —è–∫ –π–æ–≥–æ –ø–µ—Ä–µ–∫–ª–∞—Å—Ç–∏.")
    streamlit.write("–Ø–∫—â–æ –≤–∏ –Ω–µ –∑–Ω–∞—î—Ç–µ –≤—ñ–¥–ø–æ–≤—ñ–¥—å, –ø—Ä–æ—Å—Ç–æ –Ω–∞—Ç–∏—Å–Ω—ñ—Ç—å –∫–Ω–æ–ø–∫—É '–ù–µ –∑–Ω–∞—é'.")
    streamlit.write("–ü–æ—á–Ω–µ–º–æ?")
    if streamlit.button("–ü–æ—á–∞—Ç–∏"):
        page.set("quiz_question")
        streamlit.rerun()
# Page "quiz_question"
elif page.get() == "quiz_question":
    question, answers = qa.get()[index.get()]
    streamlit.subheader(f"–ü–∏—Ç–∞–Ω–Ω—è {index.get() + 1} –∑ {len(qa.get())}")
    streamlit.write(f"–°–ø—Ä–æ–±—É–π—Ç–µ –ø–µ—Ä–µ–∫–ª–∞—Å—Ç–∏ \"{question}\"")
    input = streamlit.text_input("–í–∞—à–∞ –≤—ñ–¥–ø–æ–≤—ñ–¥—å")
    col1, col2 = streamlit.columns(2)
    if col1.button("–í—ñ–¥–ø–æ–≤—ñ—Å—Ç–∏") and input != "":
        answer.set(input)
        page.set("quiz_question_result")
        streamlit.rerun()
    if col2.button("–ù–µ –∑–Ω–∞—é"):
        answer.set("$")
        page.set("quiz_question_result")
        streamlit.rerun()
    streamlit.write(f"{correct_counter.get()} –ø—Ä–∞–≤–∏–ª—å–Ω–∏—Ö, {incorrect_counter.get()} –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω–∏—Ö, {idk_counter.get()} –Ω–µ –∑–Ω–∞—é.")
# Page "quiz_question_result"
elif page.get() == "quiz_question_result":
    question, answers = qa.get()[index.get()]
    streamlit.subheader(f"–ü–∏—Ç–∞–Ω–Ω—è {index.get() + 1} –∑ {len(qa.get())}")
    streamlit.write(f"–†–µ—á–µ–Ω–Ω—è: \"{question}\"")
    streamlit.write(f"–ü—Ä–∞–≤–∏–ª—å–Ω—ñ –≤—ñ–¥–ø–æ–≤—ñ–¥—ñ: {', '.join(answers)}")
    if answer.get() != "$":
        # streamlit.markdown(f"<p style='color:red;'>{correct_counter.get()} –ø—Ä–∞–≤–∏–ª—å–Ω–∏—Ö, {incorrect_counter.get()} –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω–∏—Ö, {idk_counter.get()} –Ω–µ –∑–Ω–∞—é.</p>", unsafe_allow_html=True)
        if answer.get().lower() in answers:
            answer_state = "correct"
            streamlit.markdown(f"<p style='color:green;'>–í–∞—à–∞ –≤—ñ–¥–ø–æ–≤—ñ–¥—å –≤—ñ—Ä–Ω–∞: {answer.get()}</p>", unsafe_allow_html=True)
            streamlit.image(get_random_meme("correct"))
            correct_counter.update(lambda x: x + 1)
        else:
            answer_state = "incorrect"
            streamlit.markdown(f"<p style='color:red;'>–í–∞—à–∞ –≤—ñ–¥–ø–æ–≤—ñ–¥—å –Ω–µ–≤—ñ—Ä–Ω–∞: {answer.get()}</p>", unsafe_allow_html=True)
            streamlit.image(get_random_meme("incorrect"))
            incorrect_counter.update(lambda x: x + 1)
    else:
        answer_state = "idk"
        streamlit.write("–í–∏ –Ω–µ –∑–Ω–∞–ª–∏ –≤—ñ–¥–ø–æ–≤—ñ–¥—å.")
        streamlit.image(get_random_meme("idk"))
        idk_counter.update(lambda x: x + 1)
    if streamlit.button("–ù–∞—Å—Ç—É–ø–Ω–µ –∑–∞–ø–∏—Ç–∞–Ω–Ω—è"):
        index.update(lambda x: x + 1)
        page.set("quiz_question")
        if answer_state == "correct":
            correct_counter.update(lambda x: x - 1)
        elif answer_state == "incorrect":
            incorrect_counter.update(lambda x: x - 1)
        elif answer_state == "idk":
            idk_counter.update(lambda x: x - 1)
        streamlit.rerun()
